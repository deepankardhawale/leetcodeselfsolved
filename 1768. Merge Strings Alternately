class Solution:
    def mergeAlternately(self, word1: str, word2: str) -> str:
        j = 0
        str1 = ''
        if len(word1)>len(word2):
            len_1 = len(word2)
            for i in range(len_1):
                str1 += word1[i]
                str1 += word2[i]
                j+=1
            str1 = str1 + word1[j:]
        elif len(word2)>len(word1):
            len_1 = len(word1)
            for i in range(len_1):
                str1 += word1[i]
                str1 += word2[i]
                j+=1
            str1 = str1 + word2[j:]
        else:
            for i in range(len(word1)):
                str1 += word1[i]
                str1 += word2[i]
                
        return str1

--------------------------------------------------------
2-pointer approach
class Solution(object):
    def mergeAlternately(self, word1, word2):
        m = len(word1)
        n = len(word2)
        i = 0
        j = 0
        result = []

        while i < m or j < n:
            if i < m:
                result += word1[i]
                i += 1
            if j < n:
                result += word2[j]
                j += 1

        return "".join(result)
